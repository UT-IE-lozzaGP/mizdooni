services:
  db:
    build: ./mizdooni-db
    restart: always
    networks:
      - mizdooni
    ports:
      - 3333:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: mizdooni-admin
      MYSQL_PASSWORD: admin56@Mizdooni
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      start_period: 0s
      interval: 10s
      retries: 20
      test: ["CMD-SHELL", "/check_db.sh"]
    stdin_open: true
    tty: true

  app:
    build: ./mizdooni-backend
    networks:
      - mizdooni
    depends_on:
      db:
        condition: service_healthy
      apm-server:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/mizdooni
      SPRING_DATASOURCE_USERNAME: mizdooni-admin
      SPRING_DATASOURCE_PASSWORD: admin56@Mizdooni
    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8080/
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  
  web:
    build: ./mizdooni-frontend
    networks:
      - mizdooni
    depends_on:
      app:
        condition: service_healthy
    ports:
      - 80:80
    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:80/
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.21
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
      - "8200:8200"
    networks:
      - mizdooni
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.21
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms512m -Xmx512m
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - mizdooni
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.21
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - mizdooni
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

volumes:
  esdata:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./.esdata
  db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./.db

networks:
  mizdooni:
    driver: bridge
